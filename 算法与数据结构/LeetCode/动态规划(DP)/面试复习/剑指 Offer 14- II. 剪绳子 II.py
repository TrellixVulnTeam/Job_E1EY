'''
给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段
（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],
k[1]...k[m - 1] 。请问 k[0]*k[1]*...*k[m - 1] 可能
的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成
长度分别为2、3、3的三段，此时得到的最大乘积是18。
答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。
'''
class Solution:
    def cuttingRope(self, n: int) -> int:
        dp = [1]*(n+1)
        dp[2] = 1
        dp[1] = 0
        for i in range(3,n+1):
            for j in range(1,i):
                dp[i] = max(dp[i],j*dp[i-j],j*(i-j))
        return dp[-1]%1000000007